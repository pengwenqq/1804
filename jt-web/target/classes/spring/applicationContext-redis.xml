<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<!--该链接是单个链接 如果遇到高并发可能会出现响应不及时的现象.  -->
	<!-- <bean id="jedis" class="redis.clients.jedis.Jedis">
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port}"/>
	</bean>	 -->	
	
	
	<!--redis分片配置  -->
	<!--1.定义redis池配置文件  -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}"/>
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
	</bean>
	
	定义jedisInfo对象 
	<bean id="info1" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port1}"/>
	</bean>
	
	<bean id="info2" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port2}"/>
	</bean>
	
	<bean id="info3" class="redis.clients.jedis.JedisShardInfo">
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port3}"/>
	</bean>
	
	
	定义分片的连接池 
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg name="poolConfig" ref="poolConfig"/>
		<constructor-arg name="shards">
			<list>
				<ref bean="info1"/>
				<ref bean="info2"/>
				<ref bean="info3"/>
			</list>
		</constructor-arg>
	</bean> -->
	<!--实现哨兵的配置  -->
	<!-- <bean id="sentinelPool" class="redis.clients.jedis.JedisSentinelPool">
		<constructor-arg name="masterName" value="${redis.sentinel.mastername}"></constructor-arg>
		<constructor-arg name="sentinels" >
			<set>
				<value>${redis.sentinel.a}</value>
				<value>${redis.sentinel.b}</value>
				<value>${redis.sentinel.c}</value>
			</set>
		</constructor-arg>
	</bean> -->
	 <!-- jedis 配置-->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
        <!--最大空闲数-->  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <!--最大建立连接等待时间-->  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
    </bean>
    
    <!--利用spring工厂实例化对象  -->
    <bean id="jedisCluster"  class="com.jt.common.factory.JedisClusterFactory" >  
        <property name="redisSource">
            <value>classpath:/properties/redis.properties</value>  
        </property>  
        <property name="preKey" value="redis.cluster" />   <!--  属性文件里  key的前缀 -->  
        <property name="poolConfig" ref="poolConfig" />  
    </bean> 
	
	
</beans>